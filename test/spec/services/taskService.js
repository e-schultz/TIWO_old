// Generated by CoffeeScript 1.6.3
'use strict';
describe('Service: taskService', function() {
  var getTasks, rootScope, taskService, testList;
  beforeEach(module('tiwoApp'));
  taskService = {};
  testList = [];
  rootScope = null;
  getTasks = function() {
    var taskList;
    return taskList = [
      {
        id: 1,
        taskName: 'Phoenix',
        taskDate: '2012/01/01',
        startTime: '9am',
        endTime: '10am',
        duration: null,
        calculatedDuraton: null
      }, {
        id: 2,
        taskName: 'Phoenix',
        taskDate: '2012/01/01',
        startTime: '3pm',
        endTime: '5pm',
        duration: null,
        calculatedDuraton: null
      }
    ];
  };
  beforeEach(inject(function(_taskService_, $rootScope) {
    taskService = _taskService_;
    localStorage.taskList = JSON.stringify(angular.copy(getTasks()));
    return rootScope = $rootScope;
  }));
  it('should do something', function() {
    return expect(!!taskService).toBe(true);
  });
  it('should return two tasks', function() {
    var result;
    result = taskService.get().then(function(data) {
      return result = data;
    });
    rootScope.$apply();
    return expect(result.length).toEqual(2);
  });
  it('should return three tasks after adding a new task to the list', function() {
    var item, result;
    item = {
      id: 0,
      taskName: 'Phoenix',
      taskDate: '2012/01/01',
      startTime: '6am',
      endTime: '7am',
      duration: null,
      calculatedDuraton: null
    };
    taskService.add(item);
    result = taskService.get().then(function(data) {
      return result = data;
    });
    rootScope.$apply();
    return expect(result.length).toEqual(3);
  });
  return it('should return one item with the id of 1', function() {
    var result;
    result = taskService.get(1).then(function(data) {
      return result = data;
    });
    rootScope.$apply();
    return expect(result[0].id).toEqual(1);
  });
});
